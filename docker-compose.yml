version: '3.8'

services:
  web:
    image: 588932255754.dkr.ecr.ap-southeast-1.amazonaws.com/docker-images-repo:localprdblueimage
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
        failure_action: rollback
    container_name: blue_web_api
    ports:
      - "0.0.0.0:9080:54107"
    depends_on:
      - db
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=Qbs!23
      - DB_NAME=PSO_BI_Dev
    healthcheck:
      #test: ["CMD", "curl", "-X", "POST", "http://localhost:54107/api/Auth/Login", "-H", "accept: application/json", "-H", "Content-Type: application/json", "-d", '{"password": "string", "fcmToken": "string", "userID": "string"}']
      test: ["CMD", "curl", "-X", "GET", "http://localhost:54107/api/AppSettings/GetRecentLogs", "-H", "accept: application/json"]
      interval: 10s
      timeout: 5s
      retries: 2
      start_period: 15s


  db:
    image: postgres:16.4
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    container_name: blue_postgres_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Qbs!23
      POSTGRES_DB: PSO_BI_Dev
    ports:
      - "5435:5432"
      
    volumes:
      - ./localproduction-blue:/var/lib/postgresql/data
      # - ./db-backup/backup.sql:/backup.sql
      # - ./db-backup/restore.sh:/docker-entrypoint-initdb.d/restore.sh
      # - db_data2:/var/lib/postgresql/data

volumes:
  localproduction-blue:
    driver:
      local
